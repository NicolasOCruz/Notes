@Aspect
@Component
public class MaskSensitiveAspect {

    @Autowired
    private MaskSensitiveHandler maskSensitiveHandler;

    @Before(value = "@annotation(maskSensitive)", args = "maskSensitive")
    public void maskSensitiveAttribute(JoinPoint joinPoint, MaskSensitive maskSensitive) {
        Object target = joinPoint.getTarget();
        Field field = (Field) joinPoint.getArgs()[0];
        field.setAccessible(true);

        try {
            Object value = field.get(target);
            if (value != null) {
                field.set(target, maskSensitiveHandler.maskSensitive(value, maskSensitive));
            }
        } catch (IllegalAccessException e) {
            throw new RuntimeException("Erro ao mascarar campo sens√≠vel: " + e.getMessage());
        }
    }