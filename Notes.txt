import { FileComponent } from './file.component';
import { Router, ActivatedRoute } from '@angular/router';
import { TestBed } from '@angular/core/testing';

describe('FileComponent', () => {
  let component: FileComponent;
  let router: Router;
  let activateRoute: ActivatedRoute;

  beforeEach(() => {
    TestBed.configureTestingModule({
      providers: [
        FileComponent,
        { provide: Router, useValue: { navigate: jasmine.createSpy('navigate') } },
        { provide: ActivatedRoute, useValue: {} }
      ]
    });
    component = TestBed.inject(FileComponent);
    router = TestBed.inject(Router);
    activateRoute = TestBed.inject(ActivatedRoute);
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  describe('handleClick', () => {
    it('should navigate to correct route', () => {
      const id = 'file-id';
      component.handleClick(id);
      expect(router.navigate).toHaveBeenCalledWith([id], { relativeTo: activateRoute });
    });
  });

  describe('dates', () => {
    it('should return keys of groupedFiles', () => {
      spyOnProperty(component, 'groupedFiles', 'get').and.returnValue({ key1: [], key2: [] });
      expect(component.dates).toEqual(['key1', 'key2']);
    });
  });

  describe('groupedFiles', () => {
    it('should group files by created_at', () => {
      component.content = {
        files: [
          { id: '1', created_at: '2022-02-20' },
          { id: '2', created_at: '2022-02-21' },
          { id: '3', created_at: '2022-02-20' }
        ]
      } as any;

      expect(component.groupedFiles).toEqual({
        '2022-02-20': [{ id: '1', created_at: '2022-02-20' }, { id: '3', created_at: '2022-02-20' }],
        '2022-02-21': [{ id: '2', created_at: '2022-02-21' }]
      });
    });
  });
});
